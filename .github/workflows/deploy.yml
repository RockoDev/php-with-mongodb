name: Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - '.github/workflows/deploy.yml'
      - '.dockerignore'

jobs:

  build-linux-amd64:
    name: Build Linux/AMD64 Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Define image name and tags
      id: set_image_tags
      run: |
        REPOSITORY_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        IMAGE_NAME="ghcr.io/$REPOSITORY_OWNER/${{ github.event.repository.name }}"
        SHA_TAG=${{ github.sha }}
        LATEST_TAG=latest

        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT
        echo "SHA_TAG=$SHA_TAG" >> $GITHUB_OUTPUT
        echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ steps.set_image_tags.outputs.IMAGE_NAME }}:${{ steps.set_image_tags.outputs.SHA_TAG }}-amd64
          ${{ steps.set_image_tags.outputs.IMAGE_NAME }}:${{ steps.set_image_tags.outputs.LATEST_TAG }}-amd64
        cache-from: type=registry,ref=${{ steps.set_image_tags.outputs.IMAGE_NAME }}:${{ steps.set_image_tags.outputs.LATEST_TAG }}-amd64
        cache-to: type=registry,ref=${{ steps.set_image_tags.outputs.IMAGE_NAME }}:${{ steps.set_image_tags.outputs.LATEST_TAG }}-amd64,mode=max
        platforms: linux/amd64

  build-linux-arm64:
    name: Build Linux/ARM64 Image
    runs-on: ubuntu-24.04-arm # macos-latest for private repositories
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Define image name and tags
      id: set_image_tags
      run: |
        REPOSITORY_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        IMAGE_NAME="ghcr.io/$REPOSITORY_OWNER/${{ github.event.repository.name }}"
        SHA_TAG=${{ github.sha }}
        LATEST_TAG=latest

        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT
        echo "SHA_TAG=$SHA_TAG" >> $GITHUB_OUTPUT
        echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ steps.set_image_tags.outputs.IMAGE_NAME }}:${{ steps.set_image_tags.outputs.SHA_TAG }}-arm64
          ${{ steps.set_image_tags.outputs.IMAGE_NAME }}:${{ steps.set_image_tags.outputs.LATEST_TAG }}-arm64
        cache-from: type=registry,ref=${{ steps.set_image_tags.outputs.IMAGE_NAME }}:${{ steps.set_image_tags.outputs.LATEST_TAG }}-arm64
        cache-to: type=registry,ref=${{ steps.set_image_tags.outputs.IMAGE_NAME }}:${{ steps.set_image_tags.outputs.LATEST_TAG }}-arm64,mode=max
        platforms: linux/arm64

  create-multi-arch-manifest:
    name: Create Multi-Arch Manifest
    runs-on: ubuntu-latest
    needs: [build-linux-amd64, build-linux-arm64]
    steps:

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest
        run: |
          REPOSITORY_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="ghcr.io/$REPOSITORY_OWNER/${{ github.event.repository.name }}"
          SHA_TAG=${{ github.sha }}
          LATEST_TAG=latest
          docker manifest create ${IMAGE_NAME}:${SHA_TAG} \
            ${IMAGE_NAME}:${SHA_TAG}-amd64 \
            ${IMAGE_NAME}:${SHA_TAG}-arm64
          docker manifest push ${IMAGE_NAME}:${SHA_TAG}
          docker manifest create ${IMAGE_NAME}:${LATEST_TAG} \
            ${IMAGE_NAME}:${LATEST_TAG}-amd64 \
            ${IMAGE_NAME}:${LATEST_TAG}-arm64
          docker manifest push ${IMAGE_NAME}:${LATEST_TAG}
